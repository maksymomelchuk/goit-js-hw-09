{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAoBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IA1BSS,SAASC,cAAc,SAG/BC,iBAAiB,UAAU,SAAAC,GACjCA,EAAMC,iBAIN,IAFA,IAAIC,EAAYC,OAAOH,EAAMI,OAAO,GAAGC,OAE9BC,EAAI,EAAGA,GAAKN,EAAMI,OAAO,GAAGC,MAAOC,GAAK,EAAG,CAClCpB,EAAcoB,EAAGJ,GAE9BK,MAAK,SAAAF,G,OAASG,EAAAxB,GAASyB,OAAOC,QAAQL,E,IACtCM,OAAM,SAAAN,G,OAASG,EAAAxB,GAASyB,OAAOG,QAAQP,E,IAC1CH,GAAaC,OAAOH,EAAMI,OAAO,GAAGC,M","sources":["src/js/03-promises.js"],"sourcesContent":["// Import Notification library\nimport Notiflix from 'notiflix';\n\n// Form query selector\nconst formRef = document.querySelector('.form');\n\n// Form event listener\nformRef.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let timeDelay = Number(event.target[0].value);\n  // Iteration over amount\n  for (let i = 1; i <= event.target[2].value; i += 1) {\n    const promise = createPromise(i, timeDelay);\n    promise\n      .then(value => Notiflix.Notify.success(value))\n      .catch(value => Notiflix.Notify.failure(value));\n    timeDelay += Number(event.target[1].value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","document","querySelector","addEventListener","event","preventDefault","timeDelay","Number","target","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.54076c22.js.map"}